#!/usr/bin/env python
"""
Check component quality - see what the bad components look like
"""
import os
import sys
import django

# Set up Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'emteegee.settings')
django.setup()

from cards.models import get_cards_collection

def inspect_components():
    cards_collection = get_cards_collection()
    
    # Find a card with components
    card_with_components = cards_collection.find_one({
        'analysis.components': {'$exists': True, '$ne': {}}
    })
    
    if not card_with_components:
        print("❌ No cards with components found")
        return    print(f"📝 Card: {card_with_components['name']}")
    print(f"🔗 UUID: {card_with_components['uuid']}")
    print(f"🌐 URL: http://127.0.0.1:8000/card/{card_with_components['uuid']}/")
    
    components = card_with_components.get('analysis', {}).get('components', {})
    print(f"📊 Components: {len(components)}")
    
    for comp_type, comp_data in list(components.items())[:3]:  # First 3 components
        print(f"\n🔍 Component: {comp_type}")
        print(f"   Type: {type(comp_data)}")
        
        if isinstance(comp_data, dict):
            content = comp_data.get('content', '')
            print(f"   Content length: {len(content)}")
            print(f"   Content preview: {content[:100]}...")
            if 'coherence_score' in comp_data:
                print(f"   Coherence: {comp_data['coherence_score']}")
            if 'generated_by' in comp_data:
                print(f"   Generated by: {comp_data['generated_by']}")
        else:
            print(f"   Raw content: {str(comp_data)[:100]}...")

if __name__ == '__main__':
    inspect_components()
